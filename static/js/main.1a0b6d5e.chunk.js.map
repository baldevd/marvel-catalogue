{"version":3,"sources":["Search.js","CharacterCard.js","ComicBook.js","CreatorCard.js","Series.js","Events.js","Movies.js","TVShows.js","RadioButtons.js","Login.js","SignUp.js","AutoCompletedSearchMovies.js","AutoCompletedSearchShows.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","useState","searchValue","setSearchValue","Form","id","onSubmit","e","preventDefault","search","Row","controlid","Col","Control","size","type","value","onChange","target","Button","CharacterCard","image","name","description","Card","style","width","Img","variant","src","Body","Title","Text","ComicBook","title","pages","isbn","digital","ListGroup","className","ListGroupItem","CreatorCard","Series","startYear","endYear","Events","Movies","overview","phase","saga","release","duration","TVShows","lastAired","seasons","episodes","RadioButtons","setValue","handleResultTypeChange","change","onClick","Login","email","setEmail","password","setPassword","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","result","status","success","catch","err","Group","Label","autoFocus","block","disabled","length","SignUp","setName","passwordConfirmation","setPasswordConfirmation","password_confirmation","controlId","AutoCompletedSearchMovies","getItemValue","item","items","mcu","movies","shouldItemRender","toLowerCase","indexOf","renderItem","isHighlighted","background","onSelect","val","AutoCompletedSearchShows","tvshows","MARVEL_API_URL","MCU_API_URL","PUBLIC_KEY","TS","Date","now","HASH","crypto","MD5","toString","App","setLoading","setError","renderResult","setRenderResult","signIn","setSignIn","signUp","setSignUp","loggedIn","setLoggedIn","accountCreated","setAccountCreate","results","setResults","resultType","setResultType","data","error","returnToSearch","returnToLogin","statusFunction","successStatus","signOut","map","thumbnail","path","extension","vairant","pageCount","digitalId","fullName","cover_url","release_date","last_aired_date","number_seasons","number_episodes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a0b6d5e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n\nfunction Search(props) {\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const handleSearchInputChanges = (e) => {\n        setSearchValue(e.target.value);\n    } \n\n    const resetInputField = () => {\n        setSearchValue(\"\");\n    }\n\n    const callSearchFunction = (e) => {\n        e.preventDefault();\n        props.search(searchValue);\n        resetInputField();\n    }\n\n    return (\n        <Form id='searchbar' onSubmit={callSearchFunction}>\n            <Form.Row controlid=\"search\">\n                <Col>\n                    <Form.Control size=\"lg\" type=\"text\" value={searchValue}  onChange={handleSearchInputChanges}/>\n                </Col>\n                <Col>\n                    <Button size=\"lg\" type=\"submit\">Search</Button>\n                </Col>\n            </Form.Row>\n        </Form>\n    );\n}\n\nexport default Search;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nfunction CharacterCard({ image, name, description }) {\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={image} />\n            <Card.Body>\n                <Card.Title>{name}</Card.Title>\n                <Card.Text>\n                    {description}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default CharacterCard;","import React from 'react';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nfunction ComicBook({ image, title, description, pages, isbn, digital }) {\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={image} />\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>\n                    {description}\n                </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n                <ListGroupItem>Page Count: {pages}</ListGroupItem>\n                <ListGroupItem>ISBN: {isbn}</ListGroupItem>\n                <ListGroupItem>Digital Availability (Y/N): {digital}</ListGroupItem>\n            </ListGroup>\n        </Card>\n    );\n}\n\nexport default ComicBook;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nfunction CreatorCard({ image, name }) {\n\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={image} />\n            <Card.Body>\n                <Card.Title>{name}</Card.Title>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default CreatorCard;","import React from 'react';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nfunction Series({ image, title, description, startYear, endYear }) {\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={image} />\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>\n                    {description}\n                </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n                <ListGroupItem>Year Range: {`${startYear}-${endYear}`}</ListGroupItem>\n            </ListGroup>\n        </Card>\n    );\n\n}\n\nexport default Series;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nfunction Events({ image, title, description }) {\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={image} />\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>\n                    {description}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    );\n\n}\n\nexport default Events;","import React from 'react';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nfunction Movies({ image, title, overview, phase, saga, release, duration }) {\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={image} />\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>\n                    {overview}\n                </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n                <ListGroupItem>Phase: {phase}</ListGroupItem>\n                <ListGroupItem>Saga: {saga}</ListGroupItem>\n                <ListGroupItem>Release: {release}</ListGroupItem>\n                <ListGroupItem>Duration: {duration}</ListGroupItem>\n            </ListGroup>\n        </Card>\n    );\n}\n\nexport default Movies;","import React from 'react';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nfunction TVShows({ image, title, overview, phase, saga, release, lastAired, seasons, episodes }){\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={image} />\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>\n                    {overview}\n                </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n                <ListGroupItem>Phase: {phase}</ListGroupItem>\n                <ListGroupItem>Saga: {saga}</ListGroupItem>\n                <ListGroupItem>Release: {release}</ListGroupItem>\n                <ListGroupItem>Last Aired: {lastAired}</ListGroupItem>\n                <ListGroupItem>Seasons: {seasons}</ListGroupItem>\n                <ListGroupItem>Episodes: {episodes}</ListGroupItem>\n            </ListGroup>\n        </Card>\n    );\n\n}\n\nexport default TVShows;","import React, { useState } from 'react';\n\nfunction RadioButtons(props) {\n    const [value, setValue] = useState(\"\");\n\n    const handleValueChange = (e) => {\n        setValue(e.target.value);\n    }\n\n    const handleResultTypeChange = (e) => {\n        props.change(e.target.value);\n    }\n    \n    return (\n        <div className='radioButtons' onChange={handleValueChange}>\n            <input type='radio' value='characters' name='search' onClick={handleResultTypeChange} /> Characters\n            <input type='radio' value='creators' name='search' onClick={handleResultTypeChange} /> Creators\n            <input type='radio' value='comics' name='search'onClick={handleResultTypeChange} /> Comics\n            <input type='radio' value='series' name='search' onClick={handleResultTypeChange} /> Series\n            <input type='radio' value='events' name='search' onClick={handleResultTypeChange} /> Events\n            <input type='radio' value='movies' name='search' onClick={handleResultTypeChange} /> Movies\n            <input type='radio' value='tvshows' name='search' onClick={handleResultTypeChange} /> TV Shows\n        </div>\n    )\n}\n\nexport default RadioButtons;","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst SIGNIN = 'https://marvel-catalog-signin.herokuapp.com/api/signin';\n\nfunction Login(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    \n    const validateForm = () => {\n        return email.length > 0 && password.length > 0;\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Hello! You pressed the login button.\");\n        fetch(SIGNIN, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: email, password: password})\n        })\n            .then(res => res.json())\n            .then(result => {\n                props.status(result.success);\n                console.log(result);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    return (\n        <div className=\"Login\">\n            <Form onSubmit={handleSubmit}>\n                <Form.Group size=\"lg\" controlid=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control autoFocus type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlid=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n                <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>Login</Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst SIGNUP = 'https://marvel-catalog-signin.herokuapp.com/api/signup';\n\nfunction SignUp(props) {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n    const validateForm = () => {\n        return name.length > 0 &&\n        email.length > 0 && \n        password.length > 0 &&\n        passwordConfirmation.length > 0;\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Hello! You pressed the create account button.\")\n        fetch(SIGNUP, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({name: name, email: email, password: password, password_confirmation: passwordConfirmation})\n        })\n            .then(res => res.json())\n            .then(result => {\n                props.status(result.success);\n                console.log(result);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }\n\n    return (\n        <div className=\"SignUp\">\n            <Form onSubmit={handleSubmit}>\n                <Form.Group size=\"lg\" controlId=\"name\">\n                    <Form.Label>Name (First and Last)</Form.Label>\n                    <Form.Control type=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control autoFocus type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"email\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"passwordConfirmation\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"passwordConfirmation\" value={passwordConfirmation} onChange={(e) => setPasswordConfirmation(e.target.value)} />\n                </Form.Group>\n                <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>Create an Account</Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default SignUp;","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Autocomplete from 'react-autocomplete';\nimport mcu from './mcu.json';\n\nfunction AutoCompletedSearchMovies(props) {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleSearchInputChanges = (e) => {\n    setSearchValue(e.target.value);\n  }\n\n  const handleSelect = (val) => {\n    setSearchValue(val);\n  }\n\n  const resetInputField = () => {\n    setSearchValue(\"\");\n  }\n\n  const callSearchFunction = (e) => {\n    e.preventDefault();\n    props.search(searchValue);\n    resetInputField();\n  }\n\n  return (\n    <Form onSubmit={callSearchFunction} >\n      <Form.Row controlid=\"search\">\n        <Col>\n          <Autocomplete\n            getItemValue={(item) => item[\"title\"]}\n            items={mcu.movies}\n            shouldItemRender={(item, value) => item[\"title\"].toLowerCase().indexOf(value.toLowerCase()) > -1}\n            renderItem={(item, isHighlighted) =>\n              <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n                {item[\"title\"]}\n              </div>\n            }\n            value={searchValue}\n            onChange={handleSearchInputChanges}\n            onSelect={handleSelect}\n          />\n        </Col>\n        <Col>\n          <Button size=\"lg\" type=\"submit\">Search</Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n}\n\nexport default AutoCompletedSearchMovies;","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Autocomplete from 'react-autocomplete';\nimport mcu from './mcu.json';\n\nfunction AutoCompletedSearchShows(props) {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleSearchInputChanges = (e) => {\n    setSearchValue(e.target.value);\n  }\n\n  const handleSelect = (val) => {\n    setSearchValue(val);\n  }\n\n  const resetInputField = () => {\n    setSearchValue(\"\");\n  }\n\n  const callSearchFunction = (e) => {\n    e.preventDefault();\n    props.search(searchValue);\n    resetInputField();\n  }\n\n  return (\n    <Form onSubmit={callSearchFunction}>\n      <Form.Row controlid=\"search\">\n        <Col>\n          <Autocomplete\n            getItemValue={(item) => item[\"title\"]}\n            items={mcu.tvshows}\n            shouldItemRender={(item, value) => item[\"title\"].toLowerCase().indexOf(value.toLowerCase()) > -1}\n            renderItem={(item, isHighlighted) =>\n              <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n                {item[\"title\"]}\n              </div>\n            }\n            value={searchValue}\n            onChange={handleSearchInputChanges}\n            onSelect={handleSelect}\n          />\n        </Col>\n        <Col>\n          <Button size=\"lg\" type=\"submit\">Search</Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n}\n\nexport default AutoCompletedSearchShows;","import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport crypto from 'crypto-js';\nimport Search from './Search';\nimport CharacterCard from './CharacterCard';\nimport ComicBook from './ComicBook';\nimport CreatorCard from './CreatorCard';\nimport Series from './Series';\nimport Events from './Events';\nimport Movies from './Movies';\nimport TVShows from './TVShows';\nimport Button from 'react-bootstrap/Button';\nimport RadioButtons from './RadioButtons';\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport AutoCompletedSearchMovies from './AutoCompletedSearchMovies';\nimport AutoCompletedSearchShows from './AutoCompletedSearchShows';\n\nconst MARVEL_API_URL = 'https://gateway.marvel.com/v1/public';\nconst MCU_API_URL = 'https://mcuapi.herokuapp.com/api/v1'\nconst PUBLIC_KEY = '68ea63bfe3f79542f66d1423e0ebde35';\nconst PRIVATE_KEY = 'c779d45d411b6e1ef604cd38035a3909e8d85550';\nconst TS = Date.now();\nconst HASH = crypto.MD5(TS + PRIVATE_KEY + PUBLIC_KEY).toString();\n\nfunction App() {\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [renderResult, setRenderResult] = useState(false);\n  const [signIn, setSignIn] = useState(true);\n  const [signUp, setSignUp] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [accountCreated, setAccountCreate] = useState(false);\n\n  const [results, setResults] = useState([]);\n  const [resultType, setResultType] = useState(\"\");\n\n  const change = (resultType) => {\n    setResultType(resultType);\n  }\n\n  const search = searchValue => {\n    setLoading(true);\n    setError(null);\n\n    if (resultType === 'characters') {\n      console.log(`You're searching for ${resultType}`);\n      fetch(`${MARVEL_API_URL}/characters?nameStartsWith=${searchValue}&ts=${TS}&apikey=${PUBLIC_KEY}&hash=${HASH}`)\n        .then(res => res.json())\n        .then(result => {\n          setResults(result.data.results)\n          setRenderResult(true);\n          setLoading(false);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n\n    if (resultType === 'comics') {\n      console.log(`You're searching for ${resultType}`);\n      fetch(`${MARVEL_API_URL}/comics?titleStartsWith=${searchValue}&ts=${TS}&apikey=${PUBLIC_KEY}&hash=${HASH}`)\n        .then(res => res.json())\n        .then(result => {\n          setResults(result.data.results);\n          setRenderResult(true);\n          setLoading(false);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n    if (resultType === 'creators') {\n      console.log(`You're searching for ${resultType}`);\n      fetch(`${MARVEL_API_URL}/creators?nameStartsWith=${searchValue}&ts=${TS}&apikey=${PUBLIC_KEY}&hash=${HASH}`)\n        .then(res => res.json())\n        .then(result => {\n          setResults(result.data.results);\n          setRenderResult(true);\n          setLoading(false);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n    if (resultType === 'series') {\n      console.log(`You're searching for ${resultType}`);\n      fetch(`${MARVEL_API_URL}/series?titleStartsWith=${searchValue}&ts=${TS}&apikey=${PUBLIC_KEY}&hash=${HASH}`)\n        .then(res => res.json())\n        .then(result => {\n          setResults(result.data.results);\n          setRenderResult(true);\n          setLoading(false);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n    if (resultType === 'events') {\n      console.log(`You're searching for ${resultType}`);\n      fetch(`${MARVEL_API_URL}/events?nameStartsWith=${searchValue}&ts=${TS}&apikey=${PUBLIC_KEY}&hash=${HASH}`)\n        .then(res => res.json())\n        .then(result => {\n          setResults(result.data.results);\n          setRenderResult(true);\n          setLoading(false);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n    if (resultType === 'movies') {\n      console.log(`You're searching for ${resultType}`);\n      fetch(`${MCU_API_URL}/movies?filter=title%3D${searchValue}`)\n        .then(res => res.json())\n        .then(result => {\n          setResults(result.data);\n          setRenderResult(true);\n          setLoading(false);\n          console.log(result.data);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n    if (resultType === 'tvshows') {\n      console.log(`You're searching for ${resultType}`);\n      fetch(`${MCU_API_URL}/tvshows?filter=title%3D${searchValue}`)\n        .then(res => res.json())\n        .then(result => {\n          setResults(result.data);\n          setRenderResult(true);\n          setLoading(false);\n          console.log(result.data);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n  }\n\n  const returnToSearch = () => {\n    setRenderResult(false);\n    setResults([]);\n    setResultType(\"\");\n  }\n\n  const createAccount = () => {\n    setSignIn(false);\n    setSignUp(true);\n  }\n\n  const returnToLogin = () => {\n    setSignUp(false);\n    setSignIn(true);\n    if (accountCreated) setAccountCreate(false);\n  }\n\n  const statusFunction = successStatus => {\n    if (signIn) setLoggedIn(successStatus);\n    if (signUp) setAccountCreate(successStatus);\n  }\n\n  const signOut = () => {\n    setLoggedIn(false);\n    setSignIn(true);\n  }\n\n  if (loggedIn) {\n    if (!renderResult) {\n      if (!(\n        resultType === 'movies' ||\n        resultType === 'tvshows'\n      )) {\n        return (\n          <div className=\"App-container\">\n            <div className=\"signout-button-container\">\n              <Button variant='primary' onClick={signOut}>Sign Out</Button>\n            </div>\n            <div className=\"search-box-container\">\n              <Search search={search} />\n            </div>\n            <div className=\"radio-buttons-container\">\n              <RadioButtons change={change} />\n            </div>\n\n          </div>\n\n        );\n      } else if (resultType === 'movies') {\n        return (\n          <div className=\"App-container\">\n            <div className=\"signout-button-container\">\n              <Button variant='primary' onClick={signOut}>Sign Out</Button>\n            </div>\n            <div className=\"search-box-container\">\n              <AutoCompletedSearchMovies search={search} />\n            </div>\n            <div className=\"radio-buttons-container\">\n              <RadioButtons change={change} />\n            </div>\n          </div>\n\n        );\n      } else {\n        return (\n          <div className=\"App-container\">\n            <div className=\"signout-button-container\">\n              <Button variant='primary' onClick={signOut}>Sign Out</Button>\n            </div>\n            <div className=\"search-box-container\">\n              <AutoCompletedSearchShows search={search} />\n            </div>\n            <div className=\"radio-buttons-container\">\n              <RadioButtons change={change} />\n            </div>\n          </div>\n\n        );\n      }\n    } else {\n      if (resultType === 'characters') {\n        return (\n          <div className={'result-container'}>\n              {results.map(item =>\n                <CharacterCard key={item.id} image={`${item.thumbnail.path}/standard_fantastic.${item.thumbnail.extension}`} name={item.name} description={item.description} />)}\n            <div className=\"return-button-container\">\n              <Button vairant='primary' onClick={returnToSearch}>Return to search</Button>\n            </div>\n          </div>\n\n        );\n      }\n      if (resultType === 'comics') {\n        return (\n          <div className={'result-container'}>\n            {results.map(item =>\n              <ComicBook key={item.id}\n                image={`${item.thumbnail.path}/standard_fantastic.${item.thumbnail.extension}`}\n                title={item.title}\n                description={item.description}\n                pages={item.pageCount}\n                isbn={item.isbn}\n                digital={(item.digitalId === 0) ? 'N' : 'Y'} />)}\n            <div className=\"return-button-container\">\n              <Button vairant='primary' onClick={returnToSearch}>Return to search</Button>\n            </div>\n          </div>\n        );\n      }\n      if (resultType === 'creators') {\n        return (\n          <div className={'result-container'}>\n            {results.map(item =>\n              <CreatorCard key={item.id}\n                image={`${item.thumbnail.path}/standard_fantastic.${item.thumbnail.extension}`}\n                name={item.fullName}\n              />)}\n            <div className=\"return-button-container\">\n              <Button vairant='primary' onClick={returnToSearch}>Return to search</Button>\n            </div>\n          </div>\n        )\n      }\n      if (resultType === 'series') {\n        return (\n          <div className={'result-container'}>\n            {results.map(item =>\n              <Series key={item.id}\n                image={`${item.thumbnail.path}/standard_fantastic.${item.thumbnail.extension}`}\n                title={item.title}\n                description={item.description}\n                startYear={item.startYear}\n                endYear={item.endYear}\n              />)}\n            <div className=\"return-button-container\">\n              <Button vairant='primary' onClick={returnToSearch}>Return to search</Button>\n            </div>\n          </div>\n        )\n      }\n      if (resultType === 'events') {\n        return (\n          <div className={'result-container'}>\n            {results.map(item =>\n              <Events key={item.id}\n                image={`${item.thumbnail.path}/standard_fantastic.${item.thumbnail.extension}`}\n                title={item.title}\n                description={item.description}\n              />)}\n            <div className=\"return-button-container\">\n              <Button vairant='primary' onClick={returnToSearch}>Return to search</Button>\n            </div>\n          </div>\n        )\n      }\n      if (resultType === 'movies') {\n        return (\n          <div className={'result-container'}>\n            {results.map(item =>\n              <Movies key={item.id}\n                image={item.cover_url}\n                title={item.title}\n                overview={item.overview}\n                phase={item.phase}\n                saga={item.saga ? item.saga : 'N/A'}\n                release={item.release_date}\n                duration={item.duration ? item.duration : 'TBD'}\n              />)}\n            <div className=\"return-button-container\">\n              <Button vairant='primary' onClick={returnToSearch}>Return to search</Button>\n            </div>\n          </div>\n        );\n      }\n      if (resultType === 'tvshows') {\n        return (\n          <div className={'result-container'}>\n            {results.map(item =>\n              <TVShows key={item.id}\n                image={item.cover_url}\n                title={item.title}\n                overview={item.overview}\n                phase={item.phase}\n                saga={item.saga ? item.saga : 'N/A'}\n                release={item.release_date}\n                lastAired={item.last_aired_date ? item.last_aired_date : 'Not yet released'}\n                seasons={item.number_seasons}\n                episodes={item.number_episodes}\n              />)}\n            <div className=\"return-button-container\">\n              <Button vairant='primary' onClick={returnToSearch}>Return to search</Button>\n            </div>\n          </div>\n        );\n      }\n    }\n  } else {\n    if (signIn) {\n      return (\n        <div className=\"LoginPage\">\n          <Login status={statusFunction} />\n          <Button block size=\"lg\" type=\"submit\" onClick={createAccount}>Create an Account</Button>\n        </div>\n      );\n    }\n    if (signUp) {\n      if (!accountCreated) {\n        return (\n          <div className=\"SignUpPage\">\n            <SignUp status={statusFunction} />\n            <Button block size=\"lg\" type=\"submit\" onClick={returnToLogin}>Return to Login</Button>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"AccountCreatedPage\">Your account was successfully created! Return to login page to sign in.\n            <Button block size=\"lg\" type=\"submit\" onClick={returnToLogin}>Return to Login</Button>\n          </div>\n        )\n      }\n\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}